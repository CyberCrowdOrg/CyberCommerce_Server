<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cybercrowd.mvp.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="org.cybercrowd.mvp.model.UserInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_nick_name" jdbcType="VARCHAR" property="userNickName" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="user_wallet_addr" jdbcType="VARCHAR" property="userWalletAddr" />
    <result column="user_origin" jdbcType="VARCHAR" property="userOrigin" />
    <result column="login_type" jdbcType="VARCHAR" property="loginType" />
    <result column="login_account" jdbcType="VARCHAR" property="loginAccount" />
    <result column="login_token" jdbcType="VARCHAR" property="loginToken" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="credit_score" jdbcType="BIGINT" property="creditScore" />
    <result column="credit_amount" jdbcType="BIGINT" property="creditAmount" />
    <result column="user_status" jdbcType="CHAR" property="userStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_nick_name, user_avatar, user_wallet_addr,user_origin, login_type,
    login_account, login_token, last_login_time, credit_score, credit_amount,
    user_status,create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.cybercrowd.mvp.model.UserInfo" useGeneratedKeys="true">
    insert into user_info (user_id, user_nick_name, user_avatar, 
      user_wallet_addr, user_origin, login_type, 
      login_account, login_token, last_login_time, 
      credit_score, credit_amount, user_status, 
      create_time, update_time)
    values (#{userId,jdbcType=BIGINT}, #{userNickName,jdbcType=VARCHAR}, #{userAvatar,jdbcType=VARCHAR}, 
      #{userWalletAddr,jdbcType=VARCHAR}, #{userOrigin,jdbcType=VARCHAR}, #{loginType,jdbcType=VARCHAR}, 
      #{loginAccount,jdbcType=VARCHAR}, #{loginToken,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{creditScore,jdbcType=BIGINT}, #{creditAmount,jdbcType=BIGINT}, #{userStatus,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.cybercrowd.mvp.model.UserInfo" useGeneratedKeys="true">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userNickName != null">
        user_nick_name,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
      <if test="userWalletAddr != null">
        user_wallet_addr,
      </if>
      <if test="userOrigin != null">
        user_origin,
      </if>
      <if test="loginType != null">
        login_type,
      </if>
      <if test="loginAccount != null">
        login_account,
      </if>
      <if test="loginToken != null">
        login_token,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="creditScore != null">
        credit_score,
      </if>
      <if test="creditAmount != null">
        credit_amount,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNickName != null">
        #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userWalletAddr != null">
        #{userWalletAddr,jdbcType=VARCHAR},
      </if>
      <if test="userOrigin != null">
        #{userOrigin,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        #{loginType,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="loginToken != null">
        #{loginToken,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditScore != null">
        #{creditScore,jdbcType=BIGINT},
      </if>
      <if test="creditAmount != null">
        #{creditAmount,jdbcType=BIGINT},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cybercrowd.mvp.model.UserInfo">
    update user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNickName != null">
        user_nick_name = #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userWalletAddr != null">
        user_wallet_addr = #{userWalletAddr,jdbcType=VARCHAR},
      </if>
      <if test="userOrigin != null">
        user_origin = #{userOrigin,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        login_type = #{loginType,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        login_account = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="loginToken != null">
        login_token = #{loginToken,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditScore != null">
        credit_score = #{creditScore,jdbcType=BIGINT},
      </if>
      <if test="creditAmount != null">
        credit_amount = #{creditAmount,jdbcType=BIGINT},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cybercrowd.mvp.model.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=BIGINT},
      user_nick_name = #{userNickName,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      user_wallet_addr = #{userWalletAddr,jdbcType=VARCHAR},
      user_origin = #{userOrigin,jdbcType=VARCHAR},
      login_type = #{loginType,jdbcType=VARCHAR},
      login_account = #{loginAccount,jdbcType=VARCHAR},
      login_token = #{loginToken,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      credit_score = #{creditScore,jdbcType=BIGINT},
      credit_amount = #{creditAmount,jdbcType=BIGINT},
      user_status = #{userStatus,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="queryUserByLoginAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from user_info where login_account = #{loginAccount}
  </select>
  <select id="queryUserByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from user_info where user_id = #{userId}
  </select>
  <select id="queryUserByWalletAddr" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from user_info where user_wallet_addr = #{walletAddr}
  </select>

  <select id="findUserNickName" parameterType="java.lang.Long" resultType="java.lang.String">
    select user_nick_name from user_info where user_id = #{param1}
  </select>

</mapper>