<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cybercrowd.mvp.mapper.TaskEventMapper">
  <resultMap id="BaseResultMap" type="org.cybercrowd.mvp.model.TaskEvent">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="task_parent_id" jdbcType="VARCHAR" property="taskParentId" />
    <result column="event_type" jdbcType="VARCHAR" property="eventType" />
    <result column="event_amount" jdbcType="DECIMAL" property="eventAmount" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <resultMap id="UserTaskEventDetailsResultMap" type="org.cybercrowd.mvp.dto.UserTaskEventDetailsDto">
    <id column="id" jdbcType="BIGINT" property="taskEventId" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="dao_no" jdbcType="VARCHAR" property="daoNo"/>
    <result column="event_type" jdbcType="VARCHAR" property="eventType" />
    <result column="event_amount" jdbcType="DECIMAL" property="eventAmount" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_nick_name" jdbcType="VARCHAR" property="userNickName" />
    <result column="user_wallet_addr" jdbcType="VARCHAR" property="userWalletAddr" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
  </resultMap>
  <sql id="Base_Column_List">
    id, task_id, task_parent_id, event_type, event_amount, user_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_event
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task_event
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.cybercrowd.mvp.model.TaskEvent" useGeneratedKeys="true">
    insert into task_event (task_id, task_parent_id, event_type, 
      event_amount, user_id, create_time, 
      update_time)
    values (#{taskId,jdbcType=VARCHAR}, #{taskParentId,jdbcType=VARCHAR}, #{eventType,jdbcType=VARCHAR},
      #{eventAmount,jdbcType=DECIMAL}, #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.cybercrowd.mvp.model.TaskEvent" useGeneratedKeys="true">
    insert into task_event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskParentId != null">
        task_parent_id,
      </if>
      <if test="eventType != null">
        event_type,
      </if>
      <if test="eventAmount != null">
        event_amount,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskParentId != null">
        #{taskParentId,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="eventAmount != null">
        #{eventAmount,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cybercrowd.mvp.model.TaskEvent">
    update task_event
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskParentId != null">
        task_parent_id = #{taskParentId,jdbcType=VARCHAR},
      </if>
      <if test="eventType != null">
        event_type = #{eventType,jdbcType=VARCHAR},
      </if>
      <if test="eventAmount != null">
        event_amount = #{eventAmount,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cybercrowd.mvp.model.TaskEvent">
    update task_event
    set task_id = #{taskId,jdbcType=VARCHAR},
      task_parent_id = #{taskParentId,jdbcType=VARCHAR},
      event_type = #{eventType,jdbcType=VARCHAR},
      event_amount = #{eventAmount,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectTaskEvent" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from task_event where task_id = #{param1} and event_type = #{param2}
  </select>
  <select id="selectList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from task_event where task_id = #{param1}
  </select>

  <select id="countGrouponPeopleNumber" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from task_event where task_id = #{param1} and  event_type in('groupon_buy', 'haggle')
  </select>
  <select id="findUserTaskEvent" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from task_event where user_id = #{param1} and task_id = #{param2} and event_type = #{param3}
  </select>

  <select id="findUserTaskEventDetails" resultMap="UserTaskEventDetailsResultMap">
    SELECT
    te.id,
    te.user_id,
    te.task_id,
    daoo.dao_no,
    te.event_type,
    te.event_amount,
    te.create_time,
    ui.user_nick_name,
    ui.user_wallet_addr,
    ui.user_avatar
    FROM
        task_event te
    LEFT JOIN user_info ui on(ui.user_id = te.user_id)
    LEFT JOIN dao_organize daoo on (daoo.task_id = te.task_id)
    <where>
      <if test=" param2 == 'groupon'">
        te.task_id = #{param1}
        and te.event_type in('groupon_buy', 'haggle')
      </if>
      <if test="param2 == 'distributor' || param2 == 'sales' ">
        te.task_parent_id = #{param1}
        and te.event_type in('groupon', 'distributor')
      </if>
    </where>
  </select>
</mapper>