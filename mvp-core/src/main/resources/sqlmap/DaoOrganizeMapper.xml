<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cybercrowd.mvp.mapper.DaoOrganizeMapper">
  <resultMap id="BaseResultMap" type="org.cybercrowd.mvp.model.DaoOrganize">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dao_no" jdbcType="VARCHAR" property="daoNo" />
    <result column="dao_name" jdbcType="VARCHAR" property="daoName" />
    <result column="dao_logo" jdbcType="VARCHAR" property="daoLogo" />
    <result column="dao_intro" jdbcType="VARCHAR" property="daoIntro" />
    <result column="dao_owner_addr" jdbcType="VARCHAR" property="daoOwnerAddr" />
    <result column="dao_owner_id" jdbcType="BIGINT" property="daoOwnerId" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="UserDaoResultMap" type="org.cybercrowd.mvp.dto.BaseDaoDto" >
    <result column="dao_no" jdbcType="VARCHAR" property="daoNo" />
    <result column="dao_name" jdbcType="VARCHAR" property="daoName" />
    <result column="dao_owner_id" jdbcType="BIGINT" property="daoOwnerId" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="task_type" jdbcType="VARCHAR" property="taskType" />
    <result column="user_nick_name" jdbcType="VARCHAR" property="userNickName" />
    <result column="user_wallet_addr" jdbcType="VARCHAR" property="userWalletAddr" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, dao_no, dao_name, dao_logo, dao_intro, dao_owner_addr, dao_owner_id, task_id, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dao_organize
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dao_organize
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.cybercrowd.mvp.model.DaoOrganize" useGeneratedKeys="true">
    insert into dao_organize (dao_no, dao_name, dao_logo, 
      dao_intro, dao_owner_addr, dao_owner_id, 
      task_id, create_time, update_time
      )
    values (#{daoNo,jdbcType=VARCHAR}, #{daoName,jdbcType=VARCHAR}, #{daoLogo,jdbcType=VARCHAR}, 
      #{daoIntro,jdbcType=VARCHAR}, #{daoOwnerAddr,jdbcType=VARCHAR}, #{daoOwnerId,jdbcType=BIGINT}, 
      #{taskId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.cybercrowd.mvp.model.DaoOrganize" useGeneratedKeys="true">
    insert into dao_organize
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="daoNo != null">
        dao_no,
      </if>
      <if test="daoName != null">
        dao_name,
      </if>
      <if test="daoLogo != null">
        dao_logo,
      </if>
      <if test="daoIntro != null">
        dao_intro,
      </if>
      <if test="daoOwnerAddr != null">
        dao_owner_addr,
      </if>
      <if test="daoOwnerId != null">
        dao_owner_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="daoNo != null">
        #{daoNo,jdbcType=VARCHAR},
      </if>
      <if test="daoName != null">
        #{daoName,jdbcType=VARCHAR},
      </if>
      <if test="daoLogo != null">
        #{daoLogo,jdbcType=VARCHAR},
      </if>
      <if test="daoIntro != null">
        #{daoIntro,jdbcType=VARCHAR},
      </if>
      <if test="daoOwnerAddr != null">
        #{daoOwnerAddr,jdbcType=VARCHAR},
      </if>
      <if test="daoOwnerId != null">
        #{daoOwnerId,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cybercrowd.mvp.model.DaoOrganize">
    update dao_organize
    <set>
      <if test="daoNo != null">
        dao_no = #{daoNo,jdbcType=VARCHAR},
      </if>
      <if test="daoName != null">
        dao_name = #{daoName,jdbcType=VARCHAR},
      </if>
      <if test="daoLogo != null">
        dao_logo = #{daoLogo,jdbcType=VARCHAR},
      </if>
      <if test="daoIntro != null">
        dao_intro = #{daoIntro,jdbcType=VARCHAR},
      </if>
      <if test="daoOwnerAddr != null">
        dao_owner_addr = #{daoOwnerAddr,jdbcType=VARCHAR},
      </if>
      <if test="daoOwnerId != null">
        dao_owner_id = #{daoOwnerId,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cybercrowd.mvp.model.DaoOrganize">
    update dao_organize
    set dao_no = #{daoNo,jdbcType=VARCHAR},
      dao_name = #{daoName,jdbcType=VARCHAR},
      dao_logo = #{daoLogo,jdbcType=VARCHAR},
      dao_intro = #{daoIntro,jdbcType=VARCHAR},
      dao_owner_addr = #{daoOwnerAddr,jdbcType=VARCHAR},
      dao_owner_id = #{daoOwnerId,jdbcType=BIGINT},
      task_id = #{taskId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findDaoOrganizeByTaskId" parameterType="java.lang.String"  resultMap="BaseResultMap" >
    select <include refid="Base_Column_List"/> from dao_organize where task_id = #{param1}
  </select>
  <select id="selectDaoOrganize" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List"/> from dao_organize where dao_no = #{param1}
  </select>

  <select id="findUserDaoList" parameterType="java.lang.Long" resultMap="UserDaoResultMap">
    SELECT
      daoo.dao_no,
      daoo.dao_name,
      daoo.dao_owner_id,
      daoo.task_id,
      ti.task_type,
      daoo.create_time,
      ui.user_nick_name,
      ui.user_wallet_addr,
      ui.user_avatar
    FROM
      dao_organize daoo
        LEFT JOIN dao_member dm ON ( dm.dao_no = daoo.dao_no )
        LEFT JOIN task_info ti ON ( ti.task_id = daoo.task_id )
        LEFT JOIN user_info ui ON ( ui.user_id = daoo.dao_owner_id )
    WHERE
      dm.user_id = #{param1}
      AND dm.delete_status = '0'
  </select>

  <select id="findDaoDetails" parameterType="java.lang.String" resultMap="UserDaoResultMap">
    SELECT
      daoo.dao_no,
      daoo.dao_name,
      daoo.dao_owner_id,
      daoo.task_id,
      ti.task_type,
      daoo.create_time,
      ui.user_nick_name,
      ui.user_wallet_addr,
      ui.user_avatar
    FROM
      dao_organize daoo
        LEFT JOIN task_info ti ON ( ti.task_id = daoo.task_id )
        LEFT JOIN user_info ui ON ( ui.user_id = daoo.dao_owner_id )
    WHERE
      daoo.dao_no = #{param1}
  </select>

  <select id="findDaoDetailsByTaskId" parameterType="java.lang.String" resultMap="UserDaoResultMap">
    SELECT
      daoo.dao_no,
      daoo.dao_name,
      daoo.dao_owner_id,
      daoo.task_id,
      ti.task_type,
      daoo.create_time,
      ui.user_nick_name,
      ui.user_wallet_addr,
      ui.user_avatar
    FROM
      dao_organize daoo
        LEFT JOIN task_info ti ON ( ti.task_id = daoo.task_id )
        LEFT JOIN user_info ui ON ( ui.user_id = daoo.dao_owner_id )
    WHERE
      daoo.task_id = #{param1}
  </select>


  <select id="findDaoDetailsListByTaskId" parameterType="List" resultMap="UserDaoResultMap">
    SELECT
      daoo.dao_no,
      daoo.dao_name,
      daoo.dao_owner_id,
      daoo.task_id,
      ti.task_type,
      daoo.create_time,
      ui.user_nick_name,
      ui.user_wallet_addr,
      ui.user_avatar
    FROM
      dao_organize daoo
        LEFT JOIN task_info ti ON ( ti.task_id = daoo.task_id )
        LEFT JOIN user_info ui ON ( ui.user_id = daoo.dao_owner_id )
    WHERE
      daoo.task_id in
    <foreach item="item" collection="taskIdList" index="index"  open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="selectAll" resultMap="UserDaoResultMap">
    SELECT
      daoo.dao_no,
      daoo.dao_name,
      daoo.dao_owner_id,
      daoo.task_id,
      ti.task_type,
      daoo.create_time,
      ui.user_nick_name,
      ui.user_wallet_addr,
      ui.user_avatar
    FROM
      dao_organize daoo
        LEFT JOIN task_info ti ON ( ti.task_id = daoo.task_id )
        LEFT JOIN user_info ui ON ( ui.user_id = daoo.dao_owner_id )
    <where>
      <if test="param1 != null and param1 !='' ">
         daoo.dao_no = #{param1}
      </if>
    </where>
  </select>
</mapper>